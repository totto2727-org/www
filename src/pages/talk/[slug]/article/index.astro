---
import { generateTitle } from '#@/const.js'
import { generateOgpObject } from '#@/feature/primitive/ogp.js'
import { findManyTalk } from '#@/feature/talk/repository/findManyTalk.js'
import { LinkButton } from '@astrojs/starlight/components'
import StarlightPage from '@astrojs/starlight/components/StarlightPage.astro'

import { getTalkOgpImagePath, getTalkSlidePath } from '../_lib'

type Params = {
  slug: string
}

export async function getStaticPaths() {
  const talkList = await findManyTalk()
  return talkList.map(
    talk =>
      ({
        params: {
          slug: talk.slug,
        },
        props: {
          frontmatter: {
            title: talk.data.title.replaceAll('<wbr/>', ''),
          },
          id: talk.id,
          render: talk.render,
          slug: talk.slug,
        },
      }) satisfies Record<string, unknown> & { params: Params },
  )
}

const { props } = Astro
const { Content, headings } = await props.render()
const ogpImagePath = getTalkOgpImagePath(props.slug)
const ogpImageUrl = new URL(ogpImagePath, Astro.url)
---

<StarlightPage
  frontmatter={{
    ...props.frontmatter,
    head: generateOgpObject({
      alt: props.frontmatter.title,
      image: ogpImageUrl,
      title: generateTitle(props.frontmatter.title),
    }),
  }}
  headings={headings}
>
  <div>{`File ID: ${props.id}`}</div>
  <div>
    <LinkButton href={getTalkSlidePath(props.slug)}>スライドモード</LinkButton>
  </div>
  <hr />
  <Content />
</StarlightPage>

<style is:global>
  iframe {
    width: 100%;
    aspect-ratio: 16 / 9;
  }
</style>
