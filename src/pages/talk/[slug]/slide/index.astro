---
import { generateTitle } from '#@/const.js'
import { generateOgpObject } from '#@/feature/primitive/ogp.js'
import TalkSlide from '#@/feature/talk/component/TalkSlide.astro'
import TalkSlideLayout from '#@/feature/talk/component/TalkSlideLayout.astro'
import { findManyTalk } from '#@/feature/talk/repository/findManyTalk.js'
import { LinkButton } from '@astrojs/starlight/components'

import { getTalkArticlePath, getTalkOgpImagePath } from '../_lib'

type Params = {
  slug: string
}

export async function getStaticPaths() {
  const slideList = await findManyTalk()
  return slideList.map(
    slide =>
      ({
        params: { slug: slide.slug.replace('talk/article', '') },
        props: {
          frontmatter: {
            title: slide.data.title.replaceAll('<wbr/>', ''),
          },
          render: slide.render,
          slideTitle: slide.data.title,
          slug: slide.slug,
        },
      }) satisfies Record<string, unknown> & { params: Params },
  )
}

const { props } = Astro
const { Content } = await props.render()
const ogpImagePath = getTalkOgpImagePath(props.slug)
const ogpImageUrl = new URL(ogpImagePath, Astro.url)
---

<TalkSlideLayout
  frontmatter={{
    ...props.frontmatter,
    head: generateOgpObject({
      alt: props.frontmatter.title,
      image: ogpImageUrl,
      title: generateTitle(props.frontmatter.title),
    }),
  }}
>
  <TalkSlide title={props.slideTitle}>
    <Content />
  </TalkSlide>
  <div class="button-container">
    <LinkButton href={getTalkArticlePath(props.slug)}>記事に戻る</LinkButton>
  </div>
</TalkSlideLayout>

<style>
  .button-container {
    position: absolute;
    bottom: calc(1.4em - (51px - 36px) / 2);
    left: 0.75em;
  }
</style>
